/* the customers table contains the details of all the customers.

productLine contains data about the product line, products about the product details.
orderdetails contains the details of the orders placed.
orders has the data of all the orders, and about the orders.
payments is a table of the payments made by the customers.
offices is a table for the storage of all sales office and employees table contains the 
data about the employees working for the company.
*/

SELECT "Customers" AS table_name, 
(SELECT COUNT(*) 
FROM pragma_table_info('customers')) AS number_of_attributes,
(SELECT COUNT(*) 
FROM customers) AS number_of_rows

UNION ALL

SELECT 'Products' as table_name,
(SELECT count(*)
FROM PRAGMA_table_info('products')) as number_of_attributes, 
(SELECT count(*)
FROM products) as number_of_rows

UNION ALL

SELECT 'ProductLines' as table_name,
(SELECT count(*)
 FROM PRAGMA_table_info('productlines')) as number_of_attributes,
 (SELECT count(*)
 FROM productlines) as number_of_attributes

UNION ALL

SELECT 'Orders' as table_name,
(SELECT count(*)
 FROM PRAGMA_table_info('orders')) as number_of_attributes,
 (SELECT count(*)
 FROM orders) as number_of_attributes
 
 UNION ALL

SELECT 'OrderDetails' as table_name,
(SELECT count(*)
 FROM PRAGMA_table_info('orderdetails')) as number_of_attributes,
 (SELECT count(*)
 FROM orderdetails) as number_of_attributes
 
 UNION ALL

SELECT 'Payments' as table_name,
(SELECT count(*)
 FROM PRAGMA_table_info('payments')) as number_of_attributes,
 (SELECT count(*)
 FROM payments) as number_of_attributes
 
 UNION ALL

SELECT 'Employees' as table_name,
(SELECT count(*)
 FROM PRAGMA_table_info('employees')) as number_of_attributes,
 (SELECT count(*)
 FROM employees) as number_of_attributes
 
 UNION ALL

SELECT 'Offices' as table_name,
(SELECT count(*)
 FROM PRAGMA_table_info('offices')) as number_of_attributes,
 (SELECT count(*)
 FROM offices) as number_of_attributes;


WITH low_stock as
(
SELECT p.productName, p.productCode,p.productLine,
(SELECT ROUND(SUM(od.quantityOrdered)/p.quantityInStock*1.0,2)
 FROM orderdetails AS od 
 WHERE od.productCode=p.productCode) AS refill
 FROM products AS p 
 GROUP BY productCode
 ORDER BY refill DESC
 LIMIT 10
),

product_performance as
(
SELECT productCode, sum(quantityOrdered * priceEach) as product_performance
FROM orderdetails 
GROUP by productCode
ORDER BY product_performance DESC
LIMIT 10
)

SELECT s.productName, s.productLine
FROM low_stock as s
WHERE s.productCode IN (SELECT productCode
						FROM product_performance);


-- TOP 5 VIP customers
WITH customer_profit as 
( 
SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) as profit
FROM orders as o
JOIN orderdetails as od
on o.orderNumber = od.orderNumber
JOIN products as p 
on p.productCode = od.productCode	
GROUP BY o.customerNumber
)
SELECT cp.customerNumber, c.contactLastName, c.contactFirstName, c.city, c.country, profit
FROM customer_profit as cp
JOIN customers as c 
on c.customerNumber = cp.customerNumber
ORDER BY profit DESC
limit 5;

-- BOTTOM 5 customers 
WITH customer_profit as 
( 
SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) as profit
FROM orders as o
JOIN orderdetails as od
on o.orderNumber = od.orderNumber
JOIN products as p 
on p.productCode = od.productCode	
GROUP BY o.customerNumber
)
SELECT cp.customerNumber, c.contactLastName, c.contactFirstName, c.city, c.country, profit
FROM customer_profit as cp
JOIN customers as c 
on c.customerNumber = cp.customerNumber
ORDER BY profit
limit 5;

-- AVG customer profit
WITH profit as 
(
SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) as profit
FROM orders as o
JOIN orderdetails as od
on o.orderNumber = od.orderNumber
JOIN products as p 
on p.productCode = od.productCode	
GROUP BY o.customerNumber
)
SELECT sum(profit)/count(*)
from profit;

 WITH 
customer_profit AS 
(SELECT o.customerNumber, SUM(quantityOrdered * (priceEach - buyPrice)) AS profit
  FROM products p
  JOIN orderdetails od
    ON p.productCode = od.productCode
  JOIN orders o
    ON o.orderNumber = od.orderNumber
 GROUP BY o.customerNumber)
 
 SELECT AVG(profit) AS avg_profit 
 FROM customer_profit;

/* Based on the analysis, Product Line of "Classic cars"  have the highest performance with the lowest stock. 
1968 Ford Mustang is the product that has the highest demand.
Top five VIP customers are from countries Spain, USA, Australia and France.
 Top two VIP customers have generated a profit above 200,000 which is significantly higher value compared to profit
 generated by next top three VIP customers which is in the range of 60,000- 73,000.
 Least engaged customers are from the countries USA,Italy, France and UK in which the least generated profit by a customer is below 3000.
 Hence the company has generated an average profit of 39039.5943877551 from a customer in their LTV, investing on acquiring more customers 
 to the cmpany could increase the profit generated, with taking critical factors such as
  country with highest sales,  year-month that most sales happened in to consideraion. */
 